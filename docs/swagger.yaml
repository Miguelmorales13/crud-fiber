basePath: /api
definitions:
  dto.SignInRequest:
    properties:
      password:
        example: '******'
        type: string
      user:
        example: example@example.com
        type: string
    required:
    - password
    - user
    type: object
  dto.UserCreateDto:
    properties:
      Photo:
        example: http://ddsfdsf.cpom/dsfsdf.jpg
        type: string
      email:
        example: example@gmail.com
        type: string
      lastName:
        example: Rosas
        type: string
      name:
        example: Benito
        type: string
      password:
        example: sadsadasdas
        type: string
      rolId:
        example: 1
        type: integer
      secondLastName:
        example: Perez
        type: string
    required:
    - name
    type: object
  dto.UserUpdateDto:
    properties:
      Photo:
        example: http://ddsfdsf.cpom/dsfsdf.jpg
        type: string
      email:
        example: example@gmail.com
        type: string
      lastName:
        example: Rosas
        type: string
      name:
        example: Benito
        type: string
      password:
        example: sadsadasdas
        type: string
      rolId:
        example: 1
        type: integer
      secondLastName:
        example: Perez
        type: string
    required:
    - name
    type: object
  models.ResponseError:
    properties:
      code:
        type: integer
      message:
        type: string
      method:
        type: string
      path:
        type: string
      timestamps:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Curd
  version: "1.0"
paths:
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: sign in
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SignInRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Sign in
      tags:
      - auth
  /users:
    delete:
      consumes:
      - application/json
      description: delete user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer qwerty
              type: string
          schema:
            type: int
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: get user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer qwerty
              type: string
          schema:
            $ref: '#/definitions/dto.UserUpdateDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get user
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: update user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer qwerty
              type: string
          schema:
            items:
              $ref: '#/definitions/dto.UserUpdateDto'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update user
      tags:
      - users
    post:
      consumes:
      - application/json
      description: create user
      parameters:
      - description: name search by q
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer qwerty
              type: string
          schema:
            $ref: '#/definitions/dto.UserCreateDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
x-extension-openapi:
  example: value on a json format
